name: Test and Deploy
# DEBUG: remove next statement, uncomment the next one
on: [push]
#on: [push, pull_request]

jobs:

    test-trigger-deploy-conda-environment:
      runs-on: ubuntu-22.04
      timeout-minutes: 60


      name: test-trigger-deploy-conda-environment
      # only trigger deploy from protected branches (supposedly `main` and `next`)
      # DEBUG: remove this statement, uncomment the next one
      if: github.ref == 'refs/heads/conditionalCondaDeploy'
      #if: ${{ github.ref_protected }}
      steps:
        # DEBUG: remove the following action statement
        - uses: actions/checkout@v2

        # Scan directory conda/ and collect the name any file that changed
        - name: Verify Conda Env Files Changed
          uses: tj-actions/verify-changed-files@v11.1
          id: envfiles
          with:
            files: |
              conda

        # DEBUG: remove this whole step
        - name: echo CHANGED FILES
          run: |
            echo "CHANGED FILES = ${{ steps.envfiles.outputs.changed_files }}"

        # Find which conda YML file we should use for the update
        # branch `main` maps to `neutron-imaging` (YML file "conda/neutron-imaging.yml")
        # branch `next` maps to `neutron-imaging-dev`
        - name: Map the Branch Name to a Conda Environment
          if: ${{ steps.envfiles.outputs.changed_files }}
          uses: neutrons/branch-mapper@modifiedMain
          id: envname
          with:
            prefix: "neutron-imaging"
            suffix-default: "-dev"

          # DEBUG: remove this whole step
        - name: echo SELECTED CONDA ENV
          run: |
            echo "steps.envname.conclusion = ${{ steps.envname.conclusion }}"
            echo "SELECTED CONDA ENV = ${{ steps.envname.outputs.name }}"

        - name: test contains
          if: contains('', 'conda/.yml')
          run: |
            echo "contains successful"
            echo "changed_files = ${{ steps.envfiles.outputs.changed_files }}"
            echo "envname = conda/${{ steps.envname.outputs.name }}.yml"

        - name: Trigger Deploy
          id: trigger
          # proceed only if the appropriate conda YML file changed
          #if: ${{ steps.envname.outputs.name }} && contains(steps.envfiles.outputs.changed_files, 'conda/${{ steps.envname.outputs.name }}.yml')
          if: ${{ steps.envname.outputs.name }}
          uses: eic/trigger-gitlab-ci@v2
          with:
            url: https://code.ornl.gov
            token: ${{ secrets.GITLAB_TRIGGER_TOKEN_CONDA }}
            project_id: 11833
            ref_name: main
            variables: |
              PLAY="update"
              CONDA_ENV="${{ steps.envname.outputs.name }}"

        # DEBUG: remove this whole action-step
        # the purpose is to verify is a step executes even if the previous step is not executed
        - name: echo WE ARE RUNNING THIS
          if: steps.trigger.conclusion == 'success'
          run: |
            echo "WE ARE RUNNING THIS"
            echo "steps.trigger.conclusion = ${{ steps.trigger.conclusion }}"

        - name: Annotate commit
          if: steps.trigger.conclusion == 'success'
          uses: peter-evans/commit-comment@v2
          with:
            body: |
              GitLab pipeline with CONDA_ENV=${{ steps.conda_env_name.outputs.name }} submitted for commit ${{ steps.trigger.outputs.web_url }}

    run-unit-tests:
      runs-on: ubuntu-22.04
      timeout-minutes: 60
      name: ubuntu-22.04  python 3.8
      # DEBUG: remove this statement, uncomment the next one
      if: ${{ github.ref_protected }}
      steps:
        - uses: actions/checkout@v2
        - uses: jurplel/install-qt-action@v2
        - uses: conda-incubator/setup-miniconda@v2
          with:
            auto-update-conda: true
            python-version: 3.8
            channels: conda-forge
            auto-activate-base: true
        - name: Install dependencies
          timeout-minutes: 40
          shell: bash -l {0}
          run: |
            python -m pip install --upgrade pip
            conda env update -n base --file=conda/environment.yml
        - name: Run tests
          shell: bash -l {0}
          run: |
            cd notebooks
            conda activate base
            python -m pytest tests/

    # Trigger the CI/CD pipeline of repo "jupyter-notebooks-deploy", which
    # will update (deploy) the conda environment in selected target computers
    trigger-deploy-conda-environment:
      runs-on: ubuntu-22.04
      needs: run-unit-tests
      # only trigger deploy from protected branches (supposedly `main` and `next`)
      # DEBUG: remove this statement, uncomment the next one
      if: github.ref == 'refs/heads/conditionalCondaDeploy'
      #if: ${{ github.ref_protected }}
      steps:
        # Scan directory conda/ and collect the name any file that changed
        - name: Verify Conda Env Files Changed
          uses: tj-actions/verify-changed-files@v10.1
          id: envfiles
          with:
            files: |
              conda

        # DEBUG: remove this whole step
        - name: echo CHANGED FILES
          run: |
            echo "CHANGED FILES = ${{ steps.envfiles.outputs.changed_files }}"

        # Find which conda YML file we should use for the update
        # branch `main` maps to `neutron-imaging` (YML file "conda/neutron-imaging.yml")
        # branch `next` maps to `neutron-imaging-dev`
        - name: Map the Branch Name to a Conda Environment
          uses: neutrons/branch-mapper@modifiedMain
          id: envname
          with:
            prefix: "neutron-imaging"
            suffix-default: "-dev"

          # DEBUG: remove this whole step
        - name: echo SELECTED CONDA ENV
          run: |
            echo "SELECTED CONDA ENV = ${{ steps.envname.outputs.name }}"

        - name: Trigger deploy
          id: trigger
          # proceed only if the appropriate conda YML file changed
          if: contains(steps.envfiles.outputs.changed_files, 'conda/${{ steps.envname.outputs.name }}.yml')
          uses: eic/trigger-gitlab-ci@v2
          with:
            url: https://code.ornl.gov
            token: ${{ secrets.GITLAB_TRIGGER_TOKEN_CONDA }}
            project_id: 11833
            ref_name: main
            variables: |
              PLAY="update"
              CONDA_ENV="${{ steps.envname.outputs.name }}"

        # DEBUG: remove this whole action-step
        # the purpose is to verify is a step executes even if the previous step is not executed
        - name: echo WE ARE RUNNING THIS
          run: |
            echo "WE ARE RUNNING THIS"

        - name: Annotate commit
          uses: peter-evans/commit-comment@v2
          with:
            body: |
              GitLab pipeline with CONDA_ENV=${{ steps.conda_env_name.outputs.name }} submitted for commit ${{ steps.trigger.outputs.web_url }}

    trigger-deploy-notebooks:
      runs-on: ubuntu-22.04
      needs: run-unit-tests
      # only trigger deploys from protected branches
      if: ${{ github.ref_protected}}
      steps:
        - name: Map the Branch Name to a Notebook Collection
          uses: neutrons/branch-mapper@modifiedMain
          id: notebook_collection
          with:
            prefix: "IPTS_notebooks"
            suffix-default: "_testing"
        - name: Trigger deploy
          id: trigger
          uses: eic/trigger-gitlab-ci@v2
          with:
            url: https://code.ornl.gov
            token: ${{ secrets.GITLAB_TRIGGER_TOKEN_NOTEBOOKS}}
            project_id: 11602
            ref_name: main
            variables: |
              PLAY="imaging"
              EXTRAARGS="NOTEBOOK_COLLECTION_NAME=${{ steps.notebook_collection.outputs.name }}"
        - name: Annotate commit
          uses: peter-evans/commit-comment@v2
          with:
            body: |
              GitLab pipeline with NOTEBOOK_COLLECTION_NAME=${{ steps.notebook_collection.outputs.name }} submitted for commit ${{ steps.trigger.outputs.web_url }}
