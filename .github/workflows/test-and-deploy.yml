name: Test and Deploy
# DEBUG: remove next statement, uncomment the next one
on: [pull_request]
#on: [push, pull_request]

jobs:

    test-trigger-deploy-conda-environment:
      runs-on: ubuntu-22.04
      timeout-minutes: 60
      name: test-trigger-deploy-conda-environment
      # DEBUG: uncomment this
      #if: ${{ github.ref_protected }}
      steps:
        - uses: actions/checkout@v2

        - name: Get changed files
          id: changed-files
          uses: tj-actions/changed-files@v29.0.7

        # Find which conda environment file we should use for the deployment
        # branch `main` maps to `neutron-imaging` (YML file "conda/neutron-imaging.yml")
        # branch `next` maps to `neutron-imaging-dev`
        - name: Map the Branch Name to a Conda Environment
          uses: neutrons/branch-mapper@modifiedMain
          id: envname
          with:
            prefix: "neutron-imaging"
            suffix-default: "-dev"

        - name: Extract branch name
          shell: bash
          run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          id: extract_branch

        - name: Fake Trigger Deploy
          id: fake-trigger
          env:
            BRANCHNAME: '${{ steps.extract_branch.outputs.branch }}'
            CONDAENVFILE: 'conda/${{ steps.envname.outputs.name }}.yml'
          if: ${{ contains(steps.changed-files.outputs.all_changed_files, env.CONDAENVFILE) }}
          run: |
            echo "trigger successful"
            echo "CONDA_ENV_SOURCE=https://raw.githubusercontent.com/neutronimaging/python_notebooks/$BRANCHNAME/$CONDAENVFILE"
            echo "BRANCHNAME=$BRANCHNAME"
            echo "CONDAENVFILE=$CONDAENVFILE"
            echo "CHANGED FILES=${{ steps.changed-files.outputs.all_changed_files }}"

        - name: Trigger Deploy
          id: trigger
          env:
            # DEBUG: uncomment next line, delete the following one
            #BRANCHNAME: '${{ steps.extract_branch.outputs.branch }}'
            BRANCHNAME: 'conditionalCondaDeploy'
            CONDAENVFILE: 'conda/${{ steps.envname.outputs.name }}.yml'
          if: ${{ contains(steps.changed-files.outputs.all_changed_files, env.CONDAENVFILE) }}
          uses: eic/trigger-gitlab-ci@v2
          with:
            url: https://code.ornl.gov
            token: ${{ secrets.GITLAB_TRIGGER_TOKEN_CONDA }}
            project_id: 11833
          # DEBUG: set branch name to "main" instead of test_deploy
            ref_name: test_deploy
            variables: |
              PLAY="update"
              CONDA_ENV="${{ steps.envname.outputs.name }}"
              CONDA_ENV_SOURCE="https://raw.githubusercontent.com/neutronimaging/python_notebooks/$BRANCHNAME/$CONDAENVFILE"

        # DEBUG: remove this whole step
        - name: exit workflow
          run: exit 1

        - name: Annotate commit
          if: ${{ steps.trigger.conclusion == 'success' }}
          uses: peter-evans/commit-comment@v2
          with:
            body: |
              GitLab pipeline with CONDA_ENV=${{ steps.conda_env_name.outputs.name }} submitted for commit ${{ steps.trigger.outputs.web_url }}

    run-unit-tests:
      runs-on: ubuntu-22.04
      timeout-minutes: 60
      name: ubuntu-22.04  python 3.8
      # DEBUG: remove this statement, uncomment the next one
      if: ${{ github.ref_protected }}
      steps:
        - uses: actions/checkout@v2
        - uses: jurplel/install-qt-action@v2
        - uses: conda-incubator/setup-miniconda@v2
          with:
            auto-update-conda: true
            python-version: 3.8
            channels: conda-forge
            auto-activate-base: true
        - name: Install dependencies
          timeout-minutes: 40
          shell: bash -l {0}
          run: |
            python -m pip install --upgrade pip
            conda env update -n base --file=conda/environment.yml
        - name: Run tests
          shell: bash -l {0}
          run: |
            cd notebooks
            conda activate base
            python -m pytest tests/

    trigger-deploy-notebooks:
      runs-on: ubuntu-22.04
      needs: run-unit-tests
      # only trigger deploys from protected branches
      if: ${{ github.ref_protected}}
      steps:
        - name: Map the Branch Name to a Notebook Collection
          uses: neutrons/branch-mapper@modifiedMain
          id: notebook_collection
          with:
            prefix: "IPTS_notebooks"
            suffix-default: "_testing"
        - name: Trigger deploy
          id: trigger
          uses: eic/trigger-gitlab-ci@v2
          with:
            url: https://code.ornl.gov
            token: ${{ secrets.GITLAB_TRIGGER_TOKEN_NOTEBOOKS}}
            project_id: 11602
            ref_name: main
            variables: |
              PLAY="imaging"
              EXTRAARGS="NOTEBOOK_COLLECTION_NAME=${{ steps.notebook_collection.outputs.name }}"
        - name: Annotate commit
          uses: peter-evans/commit-comment@v2
          with:
            body: |
              GitLab pipeline with NOTEBOOK_COLLECTION_NAME=${{ steps.notebook_collection.outputs.name }} submitted for commit ${{ steps.trigger.outputs.web_url }}
